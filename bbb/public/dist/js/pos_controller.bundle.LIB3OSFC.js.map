{
  "version": 3,
  "sources": ["../../../../../apps/bbb/bbb/public/js/point_of_sale/pos_controller.bundle.js"],
  "sourcesContent": ["erpnext.PointOfSale.Controller = class {\n    constructor(wrapper) {\n        this.wrapper = $(wrapper).find('.layout-main-section');\n        this.page = wrapper.page;\n        this.check_opening_entry();\n        this.item_list = [];\n        $(\".page-head\").css(\"display\", \"none\");\n        $(\".page-body\").css(\"margin-top\", \"20px\");\n        // this.cached_data = undefined;\n        // this.get_cache_data(this);\n        this.base_rounded_total = undefined;\n        this.initial_paid_amount = undefined;\n    }\n\n    fetch_opening_entry() {\n        return frappe.call(\"erpnext.selling.page.point_of_sale.point_of_sale.check_opening_entry\", {\"user\": frappe.session.user});\n    }\n\n    check_opening_entry() {\n        this.fetch_opening_entry().then((r) => {\n            if (r.message.length) {\n                // assuming only one opening voucher is available for the current user\n                this.prepare_app_defaults(r.message[0]);\n            } else {\n                this.create_opening_voucher();\n            }\n        });\n    }\n\n    create_opening_voucher() {\n        const me = this;\n        const table_fields = [\n            {\n                fieldname: \"mode_of_payment\", fieldtype: \"Link\",\n                in_list_view: 1, label: \"Mode of Payment\",\n                options: \"Mode of Payment\", reqd: 1\n            },\n            {\n                fieldname: \"opening_amount\", fieldtype: \"Currency\",\n                in_list_view: 1, label: \"Opening Amount\",\n                options: \"company:company_currency\",\n                change: function () {\n                    dialog.fields_dict.balance_details.df.data.some(d => {\n                        if (d.idx == this.doc.idx) {\n                            d.opening_amount = this.value;\n                            dialog.fields_dict.balance_details.grid.refresh();\n                            return true;\n                        }\n                    });\n                }\n            }\n        ];\n        const fetch_pos_payment_methods = () => {\n            const pos_profile = dialog.fields_dict.pos_profile.get_value();\n            if (!pos_profile) return;\n            frappe.db.get_doc(\"POS Profile\", pos_profile).then(({payments}) => {\n                dialog.fields_dict.balance_details.df.data = [];\n                payments.forEach(pay => {\n                    const {mode_of_payment} = pay;\n                    dialog.fields_dict.balance_details.df.data.push({mode_of_payment, opening_amount: '0'});\n                });\n                dialog.fields_dict.balance_details.grid.refresh();\n            });\n        }\n        const dialog = new frappe.ui.Dialog({\n            title: __('Create POS Opening Entry'),\n            static: true,\n            fields: [\n                {\n                    fieldtype: 'Link', label: __('Company'), default: frappe.defaults.get_default('company'),\n                    options: 'Company', fieldname: 'company', reqd: 1\n                },\n                {\n                    fieldtype: 'Link', label: __('POS Profile'),\n                    options: 'POS Profile', fieldname: 'pos_profile', reqd: 1,\n                    get_query: () => pos_profile_query,\n                    onchange: () => fetch_pos_payment_methods()\n                },\n                {\n                    fieldname: \"balance_details\",\n                    fieldtype: \"Table\",\n                    label: \"Opening Balance Details\",\n                    cannot_add_rows: false,\n                    in_place_edit: true,\n                    reqd: 1,\n                    data: [],\n                    fields: table_fields\n                }\n            ],\n            primary_action: async function ({company, pos_profile, balance_details}) {\n                if (!balance_details.length) {\n                    frappe.show_alert({\n                        message: __(\"Please add Mode of payments and opening balance details.\"),\n                        indicator: 'red'\n                    })\n                    return frappe.utils.play_sound(\"error\");\n                }\n\n                // filter balance details for empty rows\n                balance_details = balance_details.filter(d => d.mode_of_payment);\n\n                const method = \"erpnext.selling.page.point_of_sale.point_of_sale.create_opening_voucher\";\n                const res = await frappe.call({method, args: {pos_profile, company, balance_details}, freeze: true});\n                !res.exc && me.prepare_app_defaults(res.message);\n                dialog.hide();\n            },\n            primary_action_label: __('Submit')\n        });\n        dialog.show();\n        const pos_profile_query = {\n            query: 'erpnext.accounts.doctype.pos_profile.pos_profile.pos_profile_query',\n            filters: {company: dialog.fields_dict.company.get_value()}\n        };\n    }\n\n    async prepare_app_defaults(data) {\n        this.pos_opening = data.name;\n        this.company = data.company;\n        this.pos_profile = data.pos_profile;\n        this.pos_opening_time = data.period_start_date;\n        this.item_stock_map = {};\n        this.settings = {};\n\n        frappe.db.get_value('Stock Settings', undefined, 'allow_negative_stock').then(({message}) => {\n            this.allow_negative_stock = flt(message.allow_negative_stock) || false;\n        });\n\n        frappe.db.get_doc(\"POS Profile\", this.pos_profile).then((profile) => {\n            Object.assign(this.settings, profile);\n            this.settings.customer_groups = profile.customer_groups.map(group => group.customer_group);\n            this.make_app();\n        });\n    }\n\n    set_opening_entry_status() {\n        this.page.set_title_sub(\n            `<span class=\"indicator orange\">\n\t\t\t\t<a class=\"text-muted\" href=\"#Form/POS%20Opening%20Entry/${this.pos_opening}\">\n\t\t\t\t\tOpened at ${moment(this.pos_opening_time).format(\"Do MMMM, h:mma\")}\n\t\t\t\t</a>\n\t\t\t</span>`);\n    }\n\n    make_app() {\n        this.prepare_dom();\n        this.prepare_components();\n        this.prepare_menu();\n        this.make_new_invoice();\n    }\n\n    prepare_dom() {\n        this.wrapper.append(\n            `<div class=\"point-of-sale-app\"></div>`\n        );\n\n        this.$components_wrapper = this.wrapper.find('.point-of-sale-app');\n    }\n\n    prepare_components() {\n        this.init_item_selector();\n        this.init_item_details();\n        this.init_item_cart();\n        this.init_payments();\n        this.init_recent_order_list();\n        this.init_order_summary();\n    }\n\n    prepare_menu() {\n        this.page.clear_menu();\n        let me = this;\n        $('#open_form_view').bind('click', function (e) {\n            e.preventDefault();\n            me.open_form_view();\n        });\n        $('#check_item_stock').bind('click', function (e) {\n            e.preventDefault();\n            me.check_item_stock();\n        });\n        $('#add_damaged_product').bind('click', function (e) {\n            e.preventDefault();\n            if(me.frm.doc.is_return){\n                me.add_damaged_product();\n            }else{\n                const message = __(\"You can add damaged product in return\");\n\t\t\t\tfrappe.show_alert({ message, indicator: \"red\" });\n            }\n\n        });\n        $('#reset_cart').bind('click', function (e) {\n            location.reload();\n            // frappe.run_serially([\n            //     () => frappe.dom.freeze(),\n            //     () => me.make_new_invoice(),\n            //     () => frappe.dom.unfreeze(),\n            // ]);\n        });\n        $('#toggle_recent_order').bind('click', function (e) {\n            e.preventDefault();\n            me.toggle_recent_order();\n        });\n        $('#save_draft_invoice').bind('click', function (e) {\n            e.preventDefault();\n            me.save_draft_invoice();\n        });\n        $('#close_pos').bind('click', function (e) {\n            e.preventDefault();\n            me.close_pos();\n        });\n        $('.recent_order_back_button').bind('click', function (e) {\n            e.preventDefault();\n            me.toggle_recent_order();\n        });\n        // this.page.add_menu_item(__(\"Open Form View\"), this.open_form_view.bind(this), false, 'Ctrl+F');\n        //\n        // this.page.find('.toggle_recent_order').bind(this.toggle_recent_order.bind(this), false, 'Ctrl+O');\n        //\n        // this.page.add_menu_item(__(\"Save as Draft\"), this.save_draft_invoice.bind(this), false, 'Ctrl+S');\n        //\n        // this.page.add_menu_item(__('Close the POS'), this.close_pos.bind(this), false, 'Shift+Ctrl+C');\n    }\n\n    open_form_view() {\n        frappe.model.sync(this.frm.doc);\n        frappe.set_route(\"Form\", this.frm.doc.doctype, this.frm.doc.name);\n    }\n\n    check_item_stock() {\n        function get_items_template(dialog, data){\n            var html = `<div class=\"card mb-4\">\n                {% if data %}\n                    <div class=\"dashboard-list-item\" style=\"padding: 12px 15px;\">\n                        <div class=\"row col-md-12\">\n                            <div class=\"col-sm-3 text-muted\" style=\"margin-top: 8px;\">\n                                Warehouse\n                            </div>\n                            <div class=\"col-sm-7 text-muted\" style=\"margin-top: 8px;\">\n                                Item Name\n                            </div>\n                            <div class=\"col-sm-2 text-muted\" style=\"margin-top: 8px;\">\n                                Stock Status\n                            </div>\n                        </div>\n                    </div>\n                    {% for d in data %}\n                        <div class=\"dashboard-list-item\" style=\"padding: 7px 15px;\">\n                            <div class=\"row col-md-12\">\n                                <div class=\"col-sm-3\" style=\"margin-top: 8px;\">\n                                    <a data-type=\"warehouse\" data-name=\"{{ d.warehouse }}\">\n                                        {{ d.warehouse }}</a>\n                                    </div>\n                                    <div class=\"col-sm-7\" style=\"margin-top: 8px; \">\n                                        <a data-type=\"item\" data-name=\"{{ d.item_name }}\">\n                                            {{ d.item_name }}</a>\n                                        </div>\n                                    <div class=\"col-sm-2 text-center\" style=\"margin-top: 8px;\">\n                                        {% if d.actual_qty > 5 %}\n                                            <span style=\"color: green\">+5</span>\n                                        {% else %}\n                                            <span style=\"color: red\">-5</span>\n                                        {% endif %}\n                                    </div>\n                                </div>\n                            </div>\n                        {% endfor %}\n                    {% else %}\n                        <div class=\"mt-2 mb-2 text-center\">\n                            <span class=\"text-md-center\">Item Not Found!</span>\n                        </div>\n                    {% endif %}\n                </div>`;\n\n            var table_data = frappe.render_template(html, {data: data});\n            d.fields_dict.items.$wrapper.html(table_data);\n        }\n\n        function get_items(item){\n            frappe.call({\n                method: 'bbb.bbb.page.item_stock.item_stock.get_item_stock_data',\n                args: {\n                    search_text: item\n                },\n                callback: function(r) {\n                    if (!r.exc) {\n                        // code snippet\n                        // console.log(r);\n                        if(r.message.length !== 0){\n                            // console.log(\"=====>>>\", r.message)\n                            get_items_template(d, r.message)\n                        }\n                        else{\n                            get_items_template(d, null)\n                        }\n                    }\n                }\n            });\n        }\n\n        var d = new frappe.ui.Dialog({\n            title: \"Item Stock Status\",\n            fields: [\n                {\n                    fieldtype: \"Data\",\n                    fieldname: \"item\",\n                    label: __(\"Item\"),\n                    reqd: 1,\n                    onchange: function (e) {\n                        // cur_dialog.fields_dict.item_code.value\n                        get_items(this.value)\n                    }\n                },\n                {\n                  fieldtype: \"Column Break\"\n                },\n                {\n                    fieldtype: \"Section Break\"\n                },\n                {\n                    'fieldname': 'items',\n                    'fieldtype': 'HTML'\n                },\n            ],\n        });\n        d.show();\n        d.$wrapper.find('.modal-dialog').css(\"max-width\", \"800px\");\n    }\n\n    add_damaged_product(){\n        const me = this;\n        let d = new frappe.ui.Dialog({\n        title: 'Enter Amount',\n        fields: [\n            // {\n            //     label: 'Item',\n            //     fieldname: 'item_code',\n            //     fieldtype: 'Link',\n            //     options: 'Item'\n            // },\n            // {\n            //     fieldtype: \"Column Break\"\n            // },\n            {\n                label: 'Amount',\n                fieldname: 'amount',\n                fieldtype: 'Data'\n            },\n        ],\n        primary_action_label: 'Add',\n        primary_action(values) {\n\n            const new_item = {'item_code': 'damaged_product', 'qty': 1};\n            const item_row = me.frm.add_child('items', new_item);\n            me.trigger_new_item_events(item_row);\n            setTimeout(function (){\n                frappe.model.set_value(item_row.doctype, item_row.name, 'rate', values.amount);\n                me.update_cart_html(item_row);\n                me.update_paid_amount();\n                me.insert_search_product_log('damaged_product');\n            }, 1500);\n            d.hide();\n        }\n    });\n\n    d.show();\n    }\n\n    toggle_recent_order() {\n        const show = this.recent_order_list.$component.is(':hidden');\n        this.toggle_recent_order_list(show);\n    }\n\n    save_draft_invoice() {\n        if (!this.$components_wrapper.is(\":visible\")) return;\n        const frm = this.frm;\n\n        this.get_naming_series(this);\n        if (this.frm.doc.items.length == 0) {\n            frappe.show_alert({\n                message: __(\"You must add atleast one item to save it as draft.\"),\n                indicator: 'red'\n            });\n            frappe.utils.play_sound(\"error\");\n            return;\n        }\n\n        this.frm.save(undefined, undefined, undefined, () => {\n            frappe.show_alert({\n                message: __(\"There was an error saving the document.\"),\n                indicator: 'red'\n            });\n            frappe.utils.play_sound(\"error\");\n        }).then(() => {\n            frappe.run_serially([\n                () => location.reload()\n                // () => frappe.dom.freeze(),\n                // () => this.make_new_invoice(),\n                // () => frappe.dom.unfreeze(),\n            ]);\n        });\n    }\n\n    close_pos() {\n        if (!this.$components_wrapper.is(\":visible\")) return;\n\n        let voucher = frappe.model.get_new_doc('POS Closing Entry');\n        voucher.pos_profile = this.frm.doc.pos_profile;\n        voucher.user = frappe.session.user;\n        voucher.company = this.frm.doc.company;\n        voucher.pos_opening_entry = this.pos_opening;\n        voucher.period_end_date = frappe.datetime.now_datetime();\n        voucher.posting_date = frappe.datetime.now_date();\n        frappe.set_route('Form', 'POS Closing Entry', voucher.name);\n    }\n\n    init_item_selector() {\n        this.item_selector = new erpnext.PointOfSale.ItemSelector({\n            wrapper: this.$components_wrapper,\n            pos_profile: this.pos_profile,\n            settings: this.settings,\n            events: {\n                item_selected: args => this.on_cart_update(args),\n                set_cart_item: args => this.item_list.push(args),\n                get_frm: () => this.frm || {},\n            }\n        })\n    }\n\n    init_item_cart() {\n        this.cart = new erpnext.PointOfSale.ItemCart({\n            wrapper: this.$components_wrapper,\n            settings: this.settings,\n            events: {\n                get_frm: () => this.frm,\n\n                cart_item_clicked: (item) => {\n                    const item_row = this.get_item_from_frm(item);\n                    this.item_details.toggle_item_details_section(item_row);\n                },\n\n                numpad_event: (value, action) => this.update_item_field(value, action),\n\n                checkout: () => this.payment.checkout(),\n\n                edit_cart: () => this.payment.edit_cart(),\n\n                customer_details_updated: (details) => {\n                    this.customer_details = details;\n                    // will add/remove LP payment method\n                    this.payment.render_loyalty_points_payment_mode();\n                },\n                get_cart_items: () => this.item_list,\n                set_cart_item: args => this.item_list.push(args),\n                on_cart_update: args => this.on_cart_update(args),\n                item_selected: args => this.on_cart_update(args),\n                // set_cache_data: args => this.set_cache_data(args),\n                // get_cache_data: () => this.cached_data,\n                open_form_view: () => this.open_form_view(),\n                toggle_recent_order: () => this.toggle_recent_order(),\n                save_draft_invoice: () => this.save_draft_invoice(),\n                close_pos: () => this.close_pos(),\n                // update_cached_item_data: (args) => this.update_cached_item_data(args),\n                update_paid_amount: () => this.update_paid_amount,\n                get_initial_paid_amount: () => this.initial_paid_amount,\n                set_initial_paid_amount: (paid_amount) => this.set_initial_paid_amount(paid_amount),\n                check_free_item_pricing_rules: () => this.check_free_item_pricing_rules(),\n                update_additional_discount_on_tag: () => this.update_additional_discount_on_tag()\n            }\n        })\n    }\n\n    init_item_details() {\n        this.item_details = new erpnext.PointOfSale.ItemDetails({\n            wrapper: this.$components_wrapper,\n            settings: this.settings,\n            events: {\n                get_frm: () => this.frm,\n\n                toggle_item_selector: (minimize) => {\n                    // this.item_selector.resize_selector(minimize); // hide for item detail\n                    this.cart.toggle_numpad(minimize);\n                },\n\n                form_updated: (item, field, value) => {\n                    const item_row = frappe.model.get_doc(item.doctype, item.name);\n                    if (item_row && item_row[field] != value) {\n                        const args = {\n                            field,\n                            value,\n                            item: this.item_details.current_item\n                        };\n                        return this.on_cart_update(args);\n                    }\n\n                    return Promise.resolve();\n                },\n\n                highlight_cart_item: (item) => {\n                    const cart_item = this.cart.get_cart_item(item);\n                    this.cart.toggle_item_highlight(cart_item);\n                },\n\n                item_field_focused: (fieldname) => {\n                    this.cart.toggle_numpad_field_edit(fieldname);\n                },\n                set_value_in_current_cart_item: (selector, value) => {\n                    this.cart.update_selector_value_in_cart_item(selector, value, this.item_details.current_item);\n                },\n                clone_new_batch_item_in_frm: (batch_serial_map, item) => {\n                    // called if serial nos are 'auto_selected' and if those serial nos belongs to multiple batches\n                    // for each unique batch new item row is added in the form & cart\n                    Object.keys(batch_serial_map).forEach(batch => {\n                        const item_to_clone = this.frm.doc.items.find(i => i.name == item.name);\n                        const new_row = this.frm.add_child(\"items\", {...item_to_clone});\n                        // update new serialno and batch\n                        new_row.batch_no = batch;\n                        new_row.serial_no = batch_serial_map[batch].join(`\\n`);\n                        new_row.qty = batch_serial_map[batch].length;\n                        this.frm.doc.items.forEach(row => {\n                            if (item.item_code === row.item_code) {\n                                this.update_cart_html(row);\n                            }\n                        });\n                    })\n                },\n                remove_item_from_cart: () => this.remove_item_from_cart(),\n                get_item_stock_map: () => this.item_stock_map,\n                close_item_details: () => {\n                    this.item_details.toggle_item_details_section(null);\n                    this.cart.prev_action = null;\n                    this.cart.toggle_item_highlight();\n                },\n                get_available_stock: (item_code, warehouse) => this.get_available_stock(item_code, warehouse)\n            }\n        });\n    }\n\n    init_payments() {\n        this.payment = new erpnext.PointOfSale.Payment({\n            wrapper: this.$components_wrapper,\n            events: {\n                get_frm: () => this.frm || {},\n\n                get_customer_details: () => this.customer_details || {},\n\n                toggle_other_sections: (show) => {\n                    if (show) {\n                        this.item_details.$component.is(':visible') ? this.item_details.$component.css('display', 'none') : '';\n                        this.item_selector.$component.css('display', 'none');\n                    } else {\n                        this.item_selector.$component.css('display', 'flex');\n                    }\n                },\n\n                submit_invoice: () => {\n                    let grand_total = this.$components_wrapper.find('.payment_grand_total_value').attr('grand_total_val')\n                    let paid_amount = this.$components_wrapper.find('.payment_amount_value').attr('paid_amount_val')\n                    if((grand_total-paid_amount) > 0){\n                        frappe.dom.unfreeze();\n                        frappe.show_alert({\n                            message: __('Partial paid not allow'),\n                            indicator: 'red'\n                        });\n                        frappe.utils.play_sound(\"error\");\n                    }else {\n                        frappe.run_serially([\n                            () => this.get_naming_series(this),\n                            () => this.update_special_note(),\n                            () => this.process_submit()\n                        ]);\n                    }\n                },\n                get_initial_paid_amount: () => this.initial_paid_amount,\n                set_initial_paid_amount: (paid_amount) => this.set_initial_paid_amount(paid_amount),\n            }\n        });\n    }\n    update_special_note(){\n        const frm = this.frm;\n        let special_note = $('#special_note').val();\n        if($(\"#show_on_print\").is(':checked'))\n            frappe.model.set_value(frm.doctype, frm.docname, 'show_on_print', 1);\n        else{\n            frappe.model.set_value(frm.doctype, frm.docname, 'show_on_print', 0);\n        }\n        if(special_note !== undefined || special_note){\n            frappe.model.set_value(frm.doctype, frm.docname, 'special_note', special_note);\n        }\n    }\n    process_submit() {\n        this.frm.savesubmit()\n            .then((r) => {\n                this.toggle_components(false);\n                this.order_summary.toggle_component(true);\n                this.order_summary.load_summary_of(this.frm.doc, true);\n                frappe.show_alert({\n                    indicator: 'green',\n                    message: __('POS invoice {0} created successfully', [r.doc.name])\n                });\n                this.print_receipt(this.frm);\n                frappe.ui.toolbar.clear_cache();\n\n            })\n    }\n\n    get_naming_series(me) {\n\n        if(me.frm.doc.__islocal){\n            frappe.call({\n                method: 'frappe.client.get_value',\n                args: {\n                    'doctype': 'POS Profile',\n                    'filters': {'name': this.pos_profile},\n                    'fieldname': [\n                        '_naming_series',\n                    ]\n                },\n                callback: function (r) {\n                    let random_number = Math.floor((Math.random() * 10000) + 1);\n                    me.frm.doc.naming_series = r.message._naming_series + random_number;\n                    me.frm.refresh(me.frm.doc.name);\n                }\n            });\n        }\n\n    }\n\n    init_recent_order_list() {\n        this.recent_order_list = new erpnext.PointOfSale.PastOrderList({\n            wrapper: this.$components_wrapper,\n            events: {\n                open_invoice_data: (name) => {\n                    frappe.db.get_doc('POS Invoice', name).then((doc) => {\n                        this.order_summary.load_summary_of(doc);\n                    });\n                },\n                reset_summary: () => this.order_summary.toggle_summary_placeholder(true),\n                insert_invoice_print_log: () => this.insert_invoice_print_log(),\n\n            }\n        })\n    }\n\n    init_order_summary() {\n        const me = this;\n        this.order_summary = new erpnext.PointOfSale.PastOrderSummary({\n            wrapper: this.$components_wrapper,\n            events: {\n                get_frm: () => this.frm,\n\n                process_return: (name) => {\n                    this.recent_order_list.toggle_component(false);\n                    // $('.items-selector').css('display', 'flex');\n                    frappe.db.get_doc('POS Invoice', name).then((doc) => {\n                        this.make_return_invoice(doc)\n                            .then(function (){\n                                setTimeout(function (){\n                                    me.cart.load_invoice()\n                                }, 1000);\n                                setTimeout(function (){\n                                    me.item_selector.toggle_component(true)\n                                }, 1400);\n\n\n\n\n                                // frappe.run_serially([\n                                //     () => me.cart.load_invoice(),\n                                //     () => me.cart.load_pricing_rules(),\n                                //     () => me.item_selector.toggle_component(true),\n                                //     // () => console.log(me.frm.doc.items),\n                                //     () => me.cart.update_item_qty_(),\n                                //     // () => me.ignore_pricing_rule_on_return()\n                                // ])\n                            });\n                            // () => setTimeout(function(){me.cart.load_invoice()}, 5000),\n                            // () => setTimeout(function(){me.item_selector.toggle_component(true)}, 5100),\n\n                    });\n                },\n                edit_order: (name) => {\n                    this.recent_order_list.toggle_component(false);\n                    frappe.run_serially([\n                        () => this.frm.refresh(name),\n                        () => this.frm.call('reset_mode_of_payments'),\n                        () => this.cart.load_invoice(),\n                        () => this.item_selector.toggle_component(true)\n                    ]);\n                },\n                delete_order: (name) => {\n                    frappe.model.delete_doc(this.frm.doc.doctype, name, () => {\n                        this.recent_order_list.refresh_list();\n                    });\n                },\n                new_order: () => {\n                    frappe.run_serially([\n                        () => frappe.dom.freeze(),\n                        () => this.make_new_invoice(),\n                        () => this.item_selector.toggle_component(true),\n                        () => frappe.dom.unfreeze(),\n                    ]);\n                }\n            }\n        })\n    }\n    ignore_pricing_rule_on_return(){\n        frappe.model.set_value('POS Invoice', this.frm.doc.name, 'ignore_pricing_rule', 0);\n    }\n    toggle_recent_order_list(show) {\n        this.toggle_components(!show);\n        this.recent_order_list.toggle_component(show);\n        this.order_summary.toggle_component(show);\n    }\n\n    toggle_components(show) {\n        this.cart.toggle_component(show);\n        this.item_selector.toggle_component(show);\n\n        // do not show item details or payment if recent order is toggled off\n        !show ? (this.item_details.toggle_component(false) || this.payment.toggle_component(false)) : '';\n    }\n\n    make_new_invoice() {\n        return frappe.run_serially([\n            () => frappe.dom.freeze(),\n            () => this.make_sales_invoice_frm(),\n            () => this.set_pricing_rule(),\n            () => this.set_pos_profile_data(),\n            () => this.set_pos_profile_status(),\n            () => this.cart.load_invoice(),\n            () => frappe.dom.unfreeze()\n        ]);\n    }\n    set_pricing_rule(){\n        frappe.model.set_value(this.frm.doc.doctype, this.frm.doc.name, 'ignore_pricing_rule', 1);\n    }\n    make_sales_invoice_frm() {\n        const doctype = 'POS Invoice';\n\n        return new Promise(resolve => {\n            if (this.frm) {\n                this.frm = this.get_new_frm(this.frm);\n                this.frm.doc.items = [];\n                this.frm.doc.is_pos = 1\n                // this.get_cached_data_if_exist(this, this.frm)\n                resolve();\n            } else {\n                frappe.model.with_doctype(doctype, () => {\n                    this.frm = this.get_new_frm();\n                    this.frm.doc.items = [];\n                    this.frm.doc.is_pos = 1\n                    // this.get_cached_data_if_exist(this, this.frm)\n                    resolve();\n                });\n            }\n        });\n    }\n\n    get_cached_data_if_exist(me, frm) {\n        // const cached_data = me.get_cache_data(me);\n        // console.log(cached_data)\n\n        if (cached_data) {\n            const items = cached_data.pos_items\n            frappe.model.set_value(frm.doc.doctype, frm.doc.name, 'customer', cached_data.pos_customer);\n            frappe.model.set_value(frm.doc.doctype, frm.doc.name, 'served_by', cached_data.served_by);\n            if (cached_data.pos_ignore_pricing_rule === 'Yes') {\n                frappe.model.set_value(frm.doc.doctype, frm.doc.name, 'ignore_pricing_rule', 1);\n            } else if (cached_data.pos_ignore_pricing_rule === 'No') {\n                frappe.model.set_value(frm.doc.doctype, frm.doc.name, 'ignore_pricing_rule', 0);\n            }\n            // frm.refresh_fields(['customer', 'served_by', 'ignore_pricing_rule']);\n            if (items) {\n                items.forEach(item_dict => {\n                    const values = Object.values(item_dict)[0];\n                    var qty = values.qty;\n                    const new_item = {\n                        'item_code': values.item_code,\n                        'batch_no': values.batch_no,\n                        'rate': values.rate,\n                        'qty': values.qty,\n                        'serial_no': values.serial_no\n                    };\n                    frm.add_child('items', new_item);\n                });\n            }\n            frm.reload_doc();\n        }\n        // console.log(this);\n    }\n\n    get_new_frm(_frm) {\n        const doctype = 'POS Invoice';\n        const page = $('<div>');\n        const frm = _frm || new frappe.ui.form.Form(doctype, page, false);\n        const name = frappe.model.make_new_doc_and_get_name(doctype, true);\n        frm.refresh(name);\n\n        return frm;\n    }\n\n    async make_return_invoice(doc) {\n        const me = this;\n        frappe.dom.freeze();\n        this.frm = this.get_new_frm(this.frm);\n        this.frm.doc.items = [];\n        const res = await frappe.call({\n            method: \"erpnext.accounts.doctype.pos_invoice.pos_invoice.make_sales_return\",\n            args: {\n                'source_name': doc.name,\n                'target_doc': this.frm.doc\n            }\n        });\n        setTimeout(()=>{\n            frappe.model.sync(res.message);\n            me.set_pos_profile_data();\n            frappe.dom.unfreeze();\n        }, 800);\n        // frappe.model.sync(res.message);\n        // await this.set_pos_profile_data();\n        frappe.dom.unfreeze();\n    }\n\n    set_pos_profile_data() {\n        if (this.company && !this.frm.doc.company) this.frm.doc.company = this.company;\n        if (this.pos_profile && !this.frm.doc.pos_profile) this.frm.doc.pos_profile = this.pos_profile;\n        if (!this.frm.doc.company) return;\n\n        return this.frm.trigger(\"set_pos_data\");\n    }\n\n    set_pos_profile_status() {\n        this.page.set_indicator(this.pos_profile, \"blue\");\n    }\n\n    async on_cart_update(args) {\n\t\tfrappe.dom.freeze();\n\t\tlet item_row = undefined;\n\t\ttry {\n\t\t\t// let { field, value, item } = args;\n            let {field, value, item, item_quantity} = args;\n            const {item_code, batch_no, serial_no, uom, rate, mrp, title, start_date, end_date, discount_amount, tag, update_rules} = item;\n\t\t\titem_row = this.get_item_from_frm(item);\n\n\t\t\tconst item_row_exists = !$.isEmptyObject(item_row);\n            const free_item = item_row.free_item_rules;\n\t\t\tconst from_selector = field === 'qty' && value === \"+1\";\n\t\t\tif (from_selector)\n\t\t\t\tvalue = flt(item_row.qty) + flt(value);\n\n\t\t\tif (item_row_exists && free_item === undefined) {\n\t\t\t\tif (field === 'qty')\n\t\t\t\t\tvalue = flt(value);\n\n\t\t\t\tif (['qty', 'conversion_factor'].includes(field) && value > 0 && !this.allow_negative_stock) {\n\t\t\t\t\tconst qty_needed = field === 'qty' ? value * item_row.conversion_factor : item_row.qty * value;\n\t\t\t\t\tawait this.check_stock_availability(item_row, qty_needed, this.frm.doc.set_warehouse);\n\t\t\t\t}\n\n\t\t\t\tif (this.is_current_item_being_edited(item_row) || from_selector) {\n\t\t\t\t\tawait frappe.model.set_value(item_row.doctype, item_row.name, field, value);\n\t\t\t\t\tthis.update_cart_html(item_row);\n\t\t\t\t}\n                const me = this\n                setTimeout(function (){\n                    me.update_additional_discount_on_tag(item_row)\n                }, 1000)\n                this.insert_search_product_log(item_code);\n\n\t\t\t} else {\n\n\t\t\t\tif (!this.frm.doc.customer)\n\t\t\t\t\treturn this.raise_customer_selection_alert();\n\n\t\t\t\tif (!this.frm.doc.served_by)\n\t\t\t\t\treturn this.raise_served_by_selection_alert();\n\n\n\t\t\t\tif (!item_code)\n\t\t\t\t\treturn;\n\n\t\t\t\t// const new_item = { item_code, batch_no, rate, [field]: value };\n\t\t\t\tconst new_item = { item_code, batch_no, rate, tag, [field]: 1 };\n\n\t\t\t\tif (serial_no) {\n\t\t\t\t\tawait this.check_serial_no_availablilty(item_code, this.frm.doc.set_warehouse, serial_no);\n\t\t\t\t\tnew_item['serial_no'] = serial_no;\n\t\t\t\t}\n\n\t\t\t\tif (field === 'serial_no')\n\t\t\t\t\tnew_item['qty'] = value.split(`\\n`).length || 0;\n\n\t\t\t\titem_row = this.frm.add_child('items', new_item);\n\n\t\t\t\tif (field === 'qty' && value !== 0 && !this.allow_negative_stock)\n\t\t\t\t\tawait this.check_stock_availability(item_row, value, this.frm.doc.set_warehouse);\n\n\t\t\t\tawait this.trigger_new_item_events(item_row);\n\n\n\t\t\t\tthis.update_cart_html(item_row);\n                let actual_tag_name = tag.split('INV').join(' ');\n                this.update_item_tag(item_row, actual_tag_name)\n\t\t\t\t// if (this.item_details.$component.is(':visible'))\n\t\t\t\t// \tthis.edit_item_details_of(item_row);\n                //\n\t\t\t\t// if (this.check_serial_batch_selection_needed(item_row) && !this.item_details.$component.is(':visible'))\n\t\t\t\t// \tthis.edit_item_details_of(item_row);\n                const me = this\n                setTimeout(function (){\n                    me.update_additional_discount_on_tag(item_row)\n                }, 500)\n\n                this.insert_search_product_log(item_code);\n\t\t\t}\n\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t} finally {\n\t\t\tfrappe.dom.unfreeze();\n\n            this.check_free_item_pricing_rules()\n\t\t\treturn item_row;\n\t\t}\n\t}\n    async update_item_tag(item_row, tag){\n        frappe.model.set_value(\"POS Invoice Item\", item_row.child_docname, 'price_rule_tag', tag)\n    }\n\n    update_additional_discount_on_tag(item_row=undefined){\n        const me = this\n        let res= me.apply_pricing_rule_on_tag(this.frm.doc)\n        let additional_discount = (parseFloat(res.discount_amount)).toFixed(2)\n        let tag_name_list = res.tag_name_list || []\n        let rules_name_list = res.rules_name_list || []\n        if(additional_discount !== undefined){\n            let tag_name = tag_name_list.join(',');\n            let rules_name = rules_name_list.join(',');\n            frappe.model.set_value('POS Invoice', me.frm.docname, 'additional_discount_tag_name', tag_name)\n            frappe.model.set_value('POS Invoice', me.frm.docname, 'additional_discount_pricing_rule_name', rules_name)\n            me.cart.update_additional_discount(me.cart, {value: flt(additional_discount)}, me.frm, 'discount_amount');\n            me.cart.update_totals_section(me.frm);\n        }\n    }\n    async update_paid_amount(){\n        let payments = this.frm.doc.payments\n        frappe.model.set_value(this.frm.doctype, this.frm.docname, 'paid_amount', this.base_rounded_total);\n        frappe.model.set_value(this.frm.doctype, this.frm.docname, 'base_paid_amount', this.base_rounded_total);\n        payments[0].amount = this.base_rounded_total\n        payments[0].base_amount = this.base_rounded_total\n        frappe.model\n        .set_value(payments[0].doctype, payments[0].name, 'amount', this.base_rounded_total)\n        .then(() => this.payment.update_totals_section(this.frm.doc))\n    }\n\n    apply_pricing_rule_in_return(item){\n        frappe.call({\n            method: \"bbb.bbb.controllers.utils.get_pricing_rule_discount\",\n            args: {\"name\": item.pricing_rules},\n            callback: (r) => {\n                frappe.model.set_value(item.doctype, item.name, 'discount_percentage', r.message.discount_percentage)\n            }\n        })\n    }\n\n    insert_search_product_log(item_code) {\n        // console.log(this.frm.doc);\n        // console.log(item_code, item_name);\n\n        frappe.db.insert({\n            \"doctype\": \"Product Search Log\",\n            \"date\": frappe.datetime.get_today(),\n            \"customer_name\": this.frm.doc.customer_name,\n            \"customer\": this.frm.doc.customer,\n            \"email\": this.frm.doc.contact_email,\n            \"location\": this.frm.doc.pos_profile,\n            \"served_by\": this.frm.doc.served_by,\n            \"company\": this.frm.doc.company,\n            \"product\": item_code\n\n        }).then(function (doc) {\n            // console.log(doc);\n        });\n    }\n\n    raise_customer_selection_alert() {\n        frappe.dom.unfreeze();\n        frappe.show_alert({\n            message: __('You must select a customer before adding an item.'),\n            indicator: 'orange'\n        });\n        frappe.utils.play_sound(\"error\");\n    }\n\n    raise_served_by_selection_alert() {\n        frappe.dom.unfreeze();\n        frappe.show_alert({\n            message: __('You must select served by before adding an item.'),\n            indicator: 'red'\n        });\n        frappe.utils.play_sound(\"error\");\n    }\n\n    get_item_from_frm({name, item_code, batch_no, uom, rate, mrp, title, update_rules}) {\n\n        let item_row = null;\n        if (name) {\n            item_row = this.frm.doc.items.find(i => i.name == name);\n        } else {\n            // if item is clicked twice from item selector\n            // then \"item_code, batch_no, uom, rate\" will help in getting the exact item\n            // to increase the qty by one\n            const has_batch_no = batch_no;\n            item_row = this.frm.doc.items.find(\n                i => i.item_code === item_code\n                    && (!has_batch_no || (has_batch_no && i.batch_no === batch_no))\n                    && (i.uom === uom)\n                    && (i.qty > 0)\n                // && (i.mrp == mrp)\n                // && (i.title == title)\n            );\n\n        }\n        return item_row || {};\n    }\n\n    edit_item_details_of(item_row) {\n        this.item_details.toggle_item_details_section(item_row);\n    }\n\n    is_current_item_being_edited(item_row) {\n        return item_row.name == this.item_details.current_item.name;\n    }\n\n    update_cart_html(item_row, remove_item) {\n        this.cart.update_item_html(item_row, remove_item);\n        this.cart.update_totals_section(this.frm);\n    }\n\n    check_serial_batch_selection_needed(item_row) {\n        // right now item details is shown for every type of item.\n        // if item details is not shown for every item then this fn will be needed\n        const serialized = item_row.has_serial_no;\n        const batched = item_row.has_batch_no;\n        const no_serial_selected = !item_row.serial_no;\n        const no_batch_selected = !item_row.batch_no;\n\n        if ((serialized && no_serial_selected) || (batched && no_batch_selected) ||\n            (serialized && batched && (no_batch_selected || no_serial_selected))) {\n            return true;\n        }\n        return false;\n    }\n\n    async trigger_new_item_events(item_row) {\n        await this.frm.script_manager.trigger('item_code', item_row.doctype, item_row.name);\n        await this.frm.script_manager.trigger('qty', item_row.doctype, item_row.name);\n    }\n\n    async check_stock_availability(item_row, qty_needed, warehouse) {\n        const available_qty = (await this.get_available_stock(item_row.item_code, warehouse)).message;\n\n\n        const bold_item_code = item_row.item_code.bold();\n        const bold_warehouse = warehouse.bold();\n        const bold_available_qty = available_qty.toString().bold()\n        if (!(available_qty > 0)) {\n            frappe.dom.unfreeze();\n            frappe.model.clear_doc(item_row.doctype, item_row.name);\n            frappe.throw({\n                title: __(\"Not Available\"),\n                message: __('Item Code: {0} is not available under warehouse {1}.', [bold_item_code, bold_warehouse])\n            })\n        } else if (available_qty < qty_needed) {\n            frappe.dom.unfreeze();\n            frappe.show_alert({\n                message: __('Stock quantity not enough for Item Code: {0} under warehouse {1}. Available quantity {2}.', [bold_item_code, bold_warehouse, bold_available_qty]),\n                indicator: 'orange'\n            });\n            frappe.utils.play_sound(\"error\");\n        }\n        // frappe.dom.freeze();\n    }\n\n    async check_serial_no_availablilty(item_code, warehouse, serial_no) {\n        const method = \"erpnext.stock.doctype.serial_no.serial_no.get_pos_reserved_serial_nos\";\n        const args = {filters: {item_code, warehouse}}\n        const res = await frappe.call({method, args});\n\n        if (res.message.includes(serial_no)) {\n            frappe.throw({\n                title: __(\"Not Available\"),\n                message: __('Serial No: {0} has already been transacted into another POS Invoice.', [serial_no.bold()])\n            });\n        }\n    }\n\n    get_available_stock(item_code, warehouse) {\n        const me = this;\n        return frappe.call({\n            method: \"erpnext.accounts.doctype.pos_invoice.pos_invoice.get_stock_availability\",\n            args: {\n                'item_code': item_code,\n                'warehouse': warehouse,\n            },\n            callback(res) {\n                if (!me.item_stock_map[item_code])\n                    me.item_stock_map[item_code] = {}\n                me.item_stock_map[item_code][warehouse] = res.message;\n            }\n        });\n    }\n\n    update_item_field(value, field_or_action) {\n        if (field_or_action === 'checkout') {\n            this.item_details.toggle_item_details_section(null);\n        } else if (field_or_action === 'remove') {\n            this.remove_item_from_cart();\n        } else {\n            const field_control = this.item_details[`${field_or_action}_control`];\n            if (!field_control) return;\n            field_control.set_focus();\n            value != \"\" && field_control.set_value(value);\n        }\n    }\n\n    remove_item_from_cart() {\n        frappe.dom.freeze();\n        const {doctype, name, current_item} = this.item_details;\n\n        frappe.model.set_value(doctype, name, 'qty', 0)\n            .then(() => {\n                frappe.model.clear_doc(doctype, name);\n                this.update_cart_html(current_item, true);\n                this.item_details.toggle_item_details_section(null);\n                this.update_additional_discount_on_tag()\n                frappe.dom.unfreeze();\n            })\n            .catch(e => console.log(e));\n    }\n\n    insert_invoice_print_log() {\n        // inserting invoice printing log\n        frappe.db.insert({\n            \"doctype\": \"Printing Log\",\n            \"date\": frappe.datetime.get_today(),\n            \"customer_name\": this.frm.doc.customer_name,\n            \"customer\": this.frm.doc.customer,\n            \"email\": this.frm.doc.contact_email,\n            \"location\": this.frm.doc.pos_profile,\n            \"mobile_number\": this.frm.doc.contact_mobile,\n            \"invoice_number\": this.frm.doc.name,\n            \"served_by\": this.frm.doc.served_by,\n            \"company\": this.frm.doc.company\n        }).then(function (doc) {\n            // console.log(doc);\n        });\n    }\n\n    print_receipt() {\n        const frm = this.frm\n\n        // inserting the printing log\n        this.insert_invoice_print_log()\n\n        frappe.utils.print(\n            this.frm.doc.doctype,\n            this.frm.doc.name,\n            this.frm.pos_print_format,\n            this.frm.doc.letter_head,\n            this.frm.doc.language || frappe.boot.lang\n        );\n    }\n\n    set_cache_data(data) {\n        frappe.call({\n            method: 'bbb.bbb.pos_invoice.set_pos_cached_data',\n            args: {\n                \"invoice_data\": data,\n            },\n            callback: function (r) {\n                if (!r.exc) {\n                    // console.log(r);\n                }\n            }\n        });\n    }\n\n    get_cache_data(me) {\n        frappe.call({\n            method: 'bbb.bbb.pos_invoice.get_pos_cached_data',\n            callback: function (r) {\n                if (!r.exc) {\n                    me.cached_data = r.message;\n                    // console.log(me.cached_data)\n                }\n            }\n        });\n    }\n\n    async remove_single_item_from_cached(me){\n        frappe.call({\n            method: 'bbb.bbb.pos_invoice.get_pos_cached_data',\n            callback: function (r) {\n                if (!r.exc) {\n                    me.cached_data = r.message;\n                    // console.log(me.cached_data)\n                }\n            }\n        });\n    }\n\n    set_initial_paid_amount(paid_amount){\n        this.initial_paid_amount = paid_amount;\n    }\n\n    check_free_item_pricing_rules(){\n        if(this.frm.doc.is_return === 1) return;\n        const doc = this.frm.doc\n        const items = doc.items\n        if(doc.total_qty <= 1){\n            return\n        }\n        var free_items = []\n        let min_qty = 0\n        let free_qty = 0\n        items.forEach(function(item, index){\n            if(item.free_item_rules){\n                free_items.push({'docname': item.name, 'mrp': item.price_list_rate})\n                min_qty = item.min_qty;\n                free_qty +=item.free_qty;\n            }\n        });\n        free_items.sort((a, b) => parseFloat(a.mrp) - parseFloat(b.mrp));\n        free_qty = Math.floor(free_qty/2)\n        free_items.forEach(function (item, index){\n            if(index < free_qty && free_items.length > min_qty){\n                frappe.model.set_value(\"POS Invoice Item\", free_items[index]['docname'], 'rate', 0)\n            }else{\n                frappe.model.set_value(\"POS Invoice Item\", free_items[index]['docname'], 'rate', item.mrp)\n            }\n        })\n    }\n    apply_pricing_rule_on_tag(doc){\n        var discount_amount = 0\n        var tag_name_list = undefined\n        var rules_name_list = undefined\n        frappe.call({\n                method: 'bbb.bbb.pos_invoice.apply_pricing_rule_on_tag',\n                async:false,\n                args: {\n                    \"doc\": doc,\n                },\n                callback: function(r) {\n                    let res = r.message\n                    if(res){\n                        discount_amount = res.discount_amount\n                        tag_name_list = res.tag_name_list\n                        rules_name_list = res.rules_name_list\n                    }\n                }\n            });\n        return {discount_amount, tag_name_list, rules_name_list}\n    }\n\n    reload_item_cart(frm){\n        let items = frm.doc.items;\n        let me = this;\n        frm.doc.items = [];\n\n        let cart_items_wrapper = $('.cart-items-section');\n        cart_items_wrapper.children().remove();\n        items.forEach(item => {\n            const new_item = { item_code: item.item_code, 'rate': item.rate, 'discount_amount': item.discount_amount, 'qty': item.qty};\n            const item_row = this.frm.add_child('items', new_item);\n            this.trigger_new_item_events(item_row)\n            me.update_cart_html(item_row)\n            frappe.model.set_value(\"POS Invoice Item\", item_row.name, 'qty', item.qty * (-1))\n\n        });\n        frm.refresh_field('items');\n        console.log(frm)\n\n    }\n};\n"],
  "mappings": "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",
  "names": []
}
