{
  "version": 3,
  "sources": ["../../../../../apps/bbb/bbb/public/js/customer_quick_entry.js"],
  "sourcesContent": ["frappe.provide('frappe.ui.form');\n\n\nfrappe.ui.form.CustomerQuickEntryForm = frappe.ui.form.QuickEntryForm.extend({\n\tinit: function(doctype, after_insert, init_callback, doc, force) {\n\t\tthis._super(doctype, after_insert, init_callback, doc, force);\n\t\tthis.skip_redirect_on_error = true;\n\t},\n\n\trender_dialog: function() {\n\t\tfrappe.model.set_value('Customer', this.doc.name, 'mobile_number', this.doc.customer_name);\n\t\tfrappe.model.set_value('Customer', this.doc.name, 'customer_name', null);\n\t\t// this.mandatory = this.mandatory.concat(this.get_variant_fields());\n\t\tthis.mandatory = this.get_variant_fields();\n\n\t\tthis._super();\n\t},\n\tget_variant_fields: function() {\n\t\tvar variant_fields = [\n\t\t{\n\t\t\tlabel: __(\"Full Name\"),\n\t\t\tfieldname: \"customer_name\",\n\t\t\tfieldtype: \"Data\",\n\t\t\treqd:1\n\t\t},\n\t\t{\n\t\t\tfieldtype: \"Column Break\"\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Mobile Number\"),\n\t\t\tfieldname: \"mobile_number\",\n\t\t\tfieldtype: \"Data\",\n\t\t\treqd:1\n\t\t},\n\t\t{\n\t\t\tfieldtype: \"Section Break\",\n\t\t\tcollapsible: 0\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Source\"),\n\t\t\tfieldname: \"source\",\n\t\t\tfieldtype: \"Link\",\n\t\t\toptions: \"Customer Source\",\n\t\t},\n\t\t{\n\t\t\tfieldtype: \"Column Break\"\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Customer Group\"),\n\t\t\tfieldname: \"customer_group\",\n\t\t\tfieldtype: \"Link\",\n\t\t\toptions: \"Customer Group\",\n\t\t},\n\t\t{\n\t\t\tfieldtype: \"Section Break\",\n\t\t\tcollapsible: 0\n\t\t},\n\t\t{\n\t\t\tfieldtype: \"Section Break\",\n\t\t\tlabel: __(\"Date Of Birth\"),\n\t\t\tcollapsible: 0\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Day\"),\n\t\t\tfieldname: \"birth_day\",\n\t\t\tfieldtype: \"Int\"\n\t\t},\n\t\t{\n\t\t\tfieldtype: \"Column Break\"\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Month\"),\n\t\t\tfieldname: \"birth_month\",\n\t\t\tfieldtype: \"Int\",\n\t\t\t// options: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\t\t},\n\t\t{\n\t\t\tfieldtype: \"Column Break\"\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Year\"),\n\t\t\tfieldname: \"birth_year\",\n\t\t\tfieldtype: \"Int\"\n\t\t},\n\t\t{\n\t\t\tfieldtype: \"Section Break\",\n\t\t\tcollapsible: 0\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Territory\"),\n\t\t\tfieldname: \"territory\",\n\t\t\tfieldtype: \"Link\",\n\t\t\toptions: \"Territory\",\n\t\t\treqd:1\n\t\t},\n\n\t\t];\n\n\t\treturn variant_fields;\n\t},\n\n\tregister_primary_action: function (){\n\t\tconst me = this;\n\t\tthis.dialog.set_primary_action(__('Save'), function() {\n\t\t\tlet regex = new RegExp('^01\\\\d{9}$');\n\t\t\tif(regex.test(this.doc.mobile_number) === false){\n\t\t\t\tfrappe.throw(__('Please enter 11 digit mobile number. Do not include country code(+88). Ex- 01700000000, 01300000000'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(me.dialog.working) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar data = me.dialog.get_values();\n\n\t\t\tif(data) {\n\t\t\t\tme.dialog.working = true;\n\t\t\t\tme.dialog.set_message(__('Saving...'));\n\t\t\t\tme.insert().then(() => {\n\t\t\t\t\tme.dialog.clear_message();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n});\n"],
  "mappings": ";;AAAA,SAAO,QAAQ,gBAAgB;AAG/B,SAAO,GAAG,KAAK,yBAAyB,OAAO,GAAG,KAAK,eAAe,OAAO;AAAA,IAC5E,MAAM,SAAS,SAAS,cAAc,eAAe,KAAK,OAAO;AAChE,WAAK,OAAO,SAAS,cAAc,eAAe,KAAK,KAAK;AAC5D,WAAK,yBAAyB;AAAA,IAC/B;AAAA,IAEA,eAAe,WAAW;AACzB,aAAO,MAAM,UAAU,YAAY,KAAK,IAAI,MAAM,iBAAiB,KAAK,IAAI,aAAa;AACzF,aAAO,MAAM,UAAU,YAAY,KAAK,IAAI,MAAM,iBAAiB,IAAI;AAEvE,WAAK,YAAY,KAAK,mBAAmB;AAEzC,WAAK,OAAO;AAAA,IACb;AAAA,IACA,oBAAoB,WAAW;AAC9B,UAAI,iBAAiB;AAAA,QACrB;AAAA,UACC,OAAO,GAAG,WAAW;AAAA,UACrB,WAAW;AAAA,UACX,WAAW;AAAA,UACX,MAAK;AAAA,QACN;AAAA,QACA;AAAA,UACC,WAAW;AAAA,QACZ;AAAA,QACA;AAAA,UACC,OAAO,GAAG,eAAe;AAAA,UACzB,WAAW;AAAA,UACX,WAAW;AAAA,UACX,MAAK;AAAA,QACN;AAAA,QACA;AAAA,UACC,WAAW;AAAA,UACX,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,OAAO,GAAG,QAAQ;AAAA,UAClB,WAAW;AAAA,UACX,WAAW;AAAA,UACX,SAAS;AAAA,QACV;AAAA,QACA;AAAA,UACC,WAAW;AAAA,QACZ;AAAA,QACA;AAAA,UACC,OAAO,GAAG,gBAAgB;AAAA,UAC1B,WAAW;AAAA,UACX,WAAW;AAAA,UACX,SAAS;AAAA,QACV;AAAA,QACA;AAAA,UACC,WAAW;AAAA,UACX,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,WAAW;AAAA,UACX,OAAO,GAAG,eAAe;AAAA,UACzB,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,OAAO,GAAG,KAAK;AAAA,UACf,WAAW;AAAA,UACX,WAAW;AAAA,QACZ;AAAA,QACA;AAAA,UACC,WAAW;AAAA,QACZ;AAAA,QACA;AAAA,UACC,OAAO,GAAG,OAAO;AAAA,UACjB,WAAW;AAAA,UACX,WAAW;AAAA,QAEZ;AAAA,QACA;AAAA,UACC,WAAW;AAAA,QACZ;AAAA,QACA;AAAA,UACC,OAAO,GAAG,MAAM;AAAA,UAChB,WAAW;AAAA,UACX,WAAW;AAAA,QACZ;AAAA,QACA;AAAA,UACC,WAAW;AAAA,UACX,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,OAAO,GAAG,WAAW;AAAA,UACrB,WAAW;AAAA,UACX,WAAW;AAAA,UACX,SAAS;AAAA,UACT,MAAK;AAAA,QACN;AAAA,MAEA;AAEA,aAAO;AAAA,IACR;AAAA,IAEA,yBAAyB,WAAW;AACnC,YAAM,KAAK;AACX,WAAK,OAAO,mBAAmB,GAAG,MAAM,GAAG,WAAW;AACrD,YAAI,QAAQ,IAAI,OAAO,YAAY;AACnC,YAAG,MAAM,KAAK,KAAK,IAAI,aAAa,MAAM,OAAM;AAC/C,iBAAO,MAAM,GAAG,qGAAqG,CAAC;AACtH;AAAA,QACD;AACA,YAAG,GAAG,OAAO,SAAS;AACrB;AAAA,QACD;AACA,YAAI,OAAO,GAAG,OAAO,WAAW;AAEhC,YAAG,MAAM;AACR,aAAG,OAAO,UAAU;AACpB,aAAG,OAAO,YAAY,GAAG,WAAW,CAAC;AACrC,aAAG,OAAO,EAAE,KAAK,MAAM;AACtB,eAAG,OAAO,cAAc;AAAA,UACzB,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD,CAAC;",
  "names": []
}
